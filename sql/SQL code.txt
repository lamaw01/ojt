1. coreln

LOAD DATA LOCAL INFILE 'c:/tmp/import1_coreln.csv'
INTO TABLE coreln
FIELDS TERMINATED BY ',' ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(account_no, product_code, @open_date, int_rate, penalty_rate, loan_amount, outstanding_bal, overdue_principal, interest_due_amount, pri_paid, penalty, customer_no, customer_name, account_name, account_status)
SET open_date = STR_TO_DATE(@open_date, '%m/%d/%Y');

2. mbwinln

LOAD DATA LOCAL INFILE 'c:/tmp/import2_mbwinln.csv'
INTO TABLE mbwinln
FIELDS TERMINATED BY ',' ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(account_no, check_digit, @open_date, int_rate, pen_rate, principal_amt, bal_amt, over_due_pri_amt, int_bal_amt, pen_bal_amt)
SET open_date = STR_TO_DATE(@open_date, '%m/%d/%Y');

3.
ALTER TABLE tablename AUTO_INCREMENT = 1

4.
UPDATE coreln 
	SET account_no = replace(account_no, '-','');
5.
UPDATE migratedln 
    SET account_no = replace(account_no, "'",0)

6.
SELECT coreln.account_no AS coreln_account_no, mbwinln.account_no AS mbwin_account_no, migratedln.account_no AS migratedln_account_no, migratedln.old_account_no AS migratedln_old_account_no
FROM coreln
INNER JOIN migratedln ON migratedln.account_no = coreln.account_no
INNER JOIN mbwinln ON migratedln.old_account_no = mbwinln.account_no
ORDER BY migratedln.migratedln_id ASC;

7.
SELECT coreln.account_no AS coreln_account_no, coreln.open_date AS coreln_open_date, mbwinln.open_date AS mbwinln_open_date, coreln.int_rate AS coreln_int_rate, mbwinln.int_rate AS mbwinln_int_rate, coreln.penalty_rate AS coreln_pen_rate, mbwinln.pen_rate AS mbwinln_pen_rate, coreln.loan_amount AS coreln_loan_amt, mbwinln.principal_amt AS mbwinln_principal_amt, coreln.outstanding_bal AS coreln_outstanding_bal, mbwinln.bal_amt AS mbwinln_bal_amt, coreln.overdue_principal AS coreln_overdue_prin, mbwinln.over_due_pri_amt AS mbwinln_over_due_pri_amt, coreln.interest_due_amount AS coreln_int_due_amt, mbwinln.int_bal_amt AS mbwinln_int_bal_amt, coreln.penalty AS coreln_penalty, mbwinln.pen_bal_amt AS mbwinln_pen_bal_amt, mbwinln.account_no AS mbwin_account_no, migratedln.account_no AS migratedln_account_no, migratedln.old_account_no AS migratedln_old_account_no
FROM coreln
INNER JOIN migratedln ON migratedln.account_no = coreln.account_no
INNER JOIN mbwinln ON migratedln.old_account_no = mbwinln.account_no
ORDER BY migratedln.migratedln_id ASC;

8.
SELECT coreln.account_no AS coreln_account_no, mbwinln.account_no AS mbwinln_acc_no, coreln.open_date AS coreln_open_date, mbwinln.open_date AS mbwinln_open_date, coreln.int_rate AS coreln_int_rate, mbwinln.int_rate AS mbwinln_int_rate, coreln.penalty_rate AS coreln_pen_rate, mbwinln.pen_rate AS mbwinln_pen_rate, coreln.loan_amount AS coreln_loan_amt, mbwinln.principal_amt AS mbwinln_principal_amt, coreln.outstanding_bal AS coreln_outstanding_bal, mbwinln.bal_amt AS mbwinln_bal_amt, coreln.overdue_principal AS coreln_overdue_prin, mbwinln.over_due_pri_amt AS mbwinln_over_due_pri_amt, coreln.interest_due_amount AS coreln_int_due_amt, mbwinln.int_bal_amt AS mbwinln_int_bal_amt, coreln.penalty AS coreln_penalty, mbwinln.pen_bal_amt AS mbwinln_pen_bal_amt
FROM coreln
INNER JOIN migratedln ON migratedln.account_no = coreln.account_no
INNER JOIN mbwinln ON migratedln.old_account_no = mbwinln.account_no
ORDER BY migratedln.migratedln_id ASC;

9. SHOW DATA TO DASHBOARD_VIEW

SELECT coreln.account_no AS coreln_account_no, mbwinln.account_no AS mbwinln_acc_no, coreln.open_date AS coreln_open_date, mbwinln.open_date AS mbwinln_open_date, coreln.int_rate AS coreln_int_rate, mbwinln.int_rate AS mbwinln_int_rate, coreln.penalty_rate AS coreln_pen_rate, mbwinln.pen_rate AS mbwinln_pen_rate, coreln.loan_amount AS coreln_loan_amt, mbwinln.principal_amt AS mbwinln_principal_amt, coreln.outstanding_bal AS coreln_outstanding_bal, mbwinln.bal_amt AS mbwinln_bal_amt, coreln.overdue_principal AS coreln_overdue_prin, mbwinln.over_due_pri_amt AS mbwinln_over_due_pri_amt, coreln.interest_due_amount AS coreln_int_due_amt, mbwinln.int_bal_amt AS mbwinln_int_bal_amt, coreln.penalty AS coreln_penalty, mbwinln.pen_bal_amt AS mbwinln_pen_bal_amt
FROM coreln
INNER JOIN migratedln ON migratedln.account_no = coreln.account_no
INNER JOIN mbwinln ON migratedln.old_account_no = mbwinln.account_no
ORDER BY migratedln.migratedln_id ASC;

10. VALIDATOR BUTTON

SELECT migratedln.migratedln_id, coreln.account_no AS coreln_account_no, mbwinln.account_no AS mbwinln_acc_no, coreln.open_date AS coreln_open_date, mbwinln.open_date AS mbwinln_open_date, coreln.int_rate AS coreln_int_rate, mbwinln.int_rate AS mbwinln_int_rate, coreln.penalty_rate AS coreln_pen_rate, mbwinln.pen_rate AS mbwinln_pen_rate, coreln.loan_amount AS coreln_loan_amt, mbwinln.principal_amt AS mbwinln_principal_amt, coreln.outstanding_bal AS coreln_outstanding_bal, mbwinln.bal_amt AS mbwinln_bal_amt, coreln.overdue_principal AS coreln_overdue_prin, mbwinln.over_due_pri_amt AS mbwinln_over_due_pri_amt, coreln.interest_due_amount AS coreln_int_due_amt, mbwinln.int_bal_amt AS mbwinln_int_bal_amt, coreln.penalty AS coreln_penalty, mbwinln.pen_bal_amt AS mbwinln_pen_bal_amt
FROM coreln
INNER JOIN migratedln ON migratedln.account_no = coreln.account_no
INNER JOIN mbwinln ON migratedln.old_account_no = mbwinln.account_no
WHERE coreln.int_rate = mbwinln.int_rate
AND coreln.penalty_rate = mbwinln.pen_rate
AND coreln.loan_amount = mbwinln.principal_amt
AND coreln.outstanding_bal = mbwinln.bal_amt
AND coreln.overdue_principal = mbwinln.over_due_pri_amt
AND coreln.interest_due_amount = mbwinln.int_bal_amt
AND coreln.penalty = mbwinln.pen_bal_amt
LIMIT 15;

11. show data dashboard

SELECT migratedln.migratedln_id, coreln.account_no AS coreln_account_no, mbwinln.account_no AS mbwinln_acc_no, coreln.account_name
FROM coreln
INNER JOIN migratedln ON migratedln.account_no = coreln.account_no
INNER JOIN mbwinln ON migratedln.old_account_no = mbwinln.account_no
WHERE coreln.int_rate = mbwinln.int_rate
AND coreln.penalty_rate = mbwinln.pen_rate
AND coreln.loan_amount = mbwinln.principal_amt
AND coreln.outstanding_bal = mbwinln.bal_amt
AND coreln.overdue_principal = mbwinln.over_due_pri_amt
AND coreln.interest_due_amount = mbwinln.int_bal_amt
AND coreln.penalty = mbwinln.pen_bal_amt
LIMIT 15;

12.
DELIMITER ?
CREATE PROCEDURE val(IN migratedln_id INT)
BEGIN
    DECLARE id INT DEFAULT 0;
    SET id = migratedln_id;
    
    IF (SELECT stat from migratedln WHERE migratedln_id = id) THEN
    	UPDATE migratedln
       	SET stat = 1;

	END IF;
END
?

13.
DELIMITER ?
CREATE PROCEDURE val3(IN migratedln_id INT)
BEGIN
    DECLARE id INT DEFAULT 0;
    SET id = 1;
    
    IF (SELECT COUNT(stat) from migratedln WHERE stat = 0 AND migratedln_id = id) = 0 THEN
    	UPDATE migratedln
    	SET stat = 0;
    ELSE
    	UPDATE migratedln
       	SET stat = 1;

	END IF;
END
?

14.

DELIMITER ?
CREATE PROCEDURE val6(IN id INT(10))
BEGIN 

    IF (SELECT COUNT(stat) from migratedln WHERE stat = 0 AND migratedln_id = id) = 0 THEN
        UPDATE migratedln
        SET stat = 0
        WHERE migratedln_id = id;
    ELSE
        UPDATE migratedln
        SET stat = 1
        WHERE migratedln_id = id;

    END IF;
END
$this->db->call_function('pc');

15.
DELIMITER ?
CREATE PROCEDURE val(IN id INT(10))
BEGIN 

    IF (SELECT stat FROM coreln
        INNER JOIN migratedln ON migratedln.account_no = coreln.account_no
        INNER JOIN mbwinln ON migratedln.old_account_no = mbwinln.account_no
        WHERE coreln.int_rate = mbwinln.int_rate
        AND coreln.penalty_rate = mbwinln.pen_rate
        AND coreln.loan_amount = mbwinln.principal_amt
        AND coreln.outstanding_bal = mbwinln.bal_amt
        AND coreln.overdue_principal = mbwinln.over_due_pri_amt
        AND coreln.interest_due_amount = mbwinln.int_bal_amt
        AND coreln.penalty = mbwinln.pen_bal_amt
        AND migratedln.stat = 0) THEN

        UPDATE migratedln
        SET stat = 1
        WHERE migratedln_id = id;
        
    END IF;
END
?

16.
DELIMITER ?
CREATE PROCEDURE val7(IN id INT(10))
BEGIN 

    IF (SELECT * FROM coreln
        INNER JOIN migratedln ON migratedln.account_no = coreln.account_no
        INNER JOIN mbwinln ON migratedln.old_account_no = mbwinln.account_no
        WHERE coreln.int_rate) IN (SELECT * FROM mbwinln WHERE mbwinln.int_rate)
        
        THEN

        UPDATE migratedln
        SET stat = 1
        WHERE migratedln_id = id;
        
    END IF;
END
?

17.
BEGIN 

    IF (SELECT coreln.int_rate FROM coreln
        INNER JOIN migratedln ON migratedln.account_no = coreln.account_no
        INNER JOIN mbwinln ON migratedln.old_account_no = mbwinln.account_no
        WHERE coreln.int_rate) = (SELECT mbwinln.int_rate FROM mbwinl)
        AND
        (SELECT coreln.penalty_rate FROM coreln) = (SELECT mbwinln.pen_rate FROM mbwinln)
        AND
        (SELECT coreln.loan_amount FROM coreln) = (SELECT mbwinln.principal_amt FROM mbwinln)
        AND
        (SELECT coreln.outstanding_bal FROM coreln) = (SELECT mbwinln.bal_amt FROM mbwinln)
        AND
        (SELECT coreln.overdue_principal FROM coreln) = (SELECT mbwinln.over_due_pri_amt FROM mbwinln)
        AND
        (SELECT coreln.interest_due_amount FROM coreln) = (SELECT mbwinln.int_bal_amt FROM mbwinln)
        AND
        (SELECT coreln.penalty FROM coreln) = (SELECT mbwinln.pen_bal_amt FROM mbwinln)
        AND
        (SELECT migratedln.stat FROM = migratedln WHERE migratedln.stat = 0)
        AND 
        (SELECT migratedln.migratedln_id FROM migratedln WHERE migratedln.migratedln_id = id)
        
        THEN

        UPDATE migratedln
        SET stat = 1
        WHERE migratedln_id = id;
        
    END IF;
END?

18.
BEGIN 

    IF (SELECT coreln.int_rate, coreln.penalty_rate, coreln.loan_amount, coreln.outstanding_bal, coreln.overdue_principal, coreln.interest_due_amount, coreln.penalty FROM coreln
        INNER JOIN migratedln ON migratedln.account_no = coreln.account_no
        INNER JOIN mbwinln ON migratedln.old_account_no = mbwinln.account_no
        WHERE coreln.int_rate = mbwinln.int_rate
        AND coreln.penalty_rate = mbwinln.pen_rate
        AND coreln.loan_amount = mbwinln.principal_amt
        AND coreln.outstanding_bal = mbwinln.bal_amt
        AND coreln.overdue_principal = mbwinln.over_due_pri_amt
        AND coreln.interest_due_amount = mbwinln.int_bal_amt
        AND coreln.penalty = mbwinln.pen_bal_amt
        AND migratedln.stat = 0) = (SELECT mbwinln.int_rate, mbwinln.pen_rate, mbwinln.principal_amt, mbwinln.bal_amt, mbwinln.over_due_pri_amt, mbwinln.int_bal_amt, mbwinln.pen_bal_amt FROM mbwinln WHERE mbwinln.int_rate = coreln.int_rate
        AND mbwinln.pen_rate = coreln.penalty_rate
        AND mbwinln.principal_amt = coreln.loan_amount
        AND mbwinln.bal_amt = coreln.outstanding_bal
        AND mbwinln.over_due_pri_amt = coreln.overdue_principal
        AND mbwinln.int_bal_amt = coreln.interest_due_amount
        AND mbwinln.pen_bal_amt = coreln.penalty
        AND migratedln.stat = 0)
        
        THEN

        UPDATE migratedln
        SET stat = 1
        WHERE migratedln_id = id;
        
    END IF;
END
?

20.
DELIMITER ?
CREATE TRIGGER insertValln
AFTER UPDATE ON migratedln
FOR EACH ROW
BEGIN

	IF migratedln.stat = 1 THEN 
    
    	INSERT INTO validateln(coreln_id, mbwin_id, acc_name)
        VALUES(OLD.migratedln.account_no, OLD.mbwinln.account_no, OLD.coreln.account_name);
    
	END IF;
END
?

21.

BEGIN
	CASE WHEN (OLD.stat = 0) THEN
    	INSERT INTO validateln(coreln_id, mbwinln_id)
        VALUES(OLD.account_no, OLD.old_account_no);
    WHEN (OLD.stat = 1) THEN
    	INSERT INTO validateln(coreln_id, mbwinln_id)
        VALUES(OLD.account_no, OLD.old_account_no);
    ELSE BEGIN END;
    END CASE;

22.

DELIMITER ?
CREATE PROCEDURE insertValln()
BEGIN
	IF stat = 1 THEN
    INSERT INTO validateln(coreln_id,mbwinln_id)
    VALUES(account_no,old_account_no);
	END IF;
END
?
END
